DROP TABLE IF EXISTS users,
friends,
mpa,
movies,
genres,
movies_genres,
movies_likes CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(255) NOT NULL,
    login varchar(255) NOT NULL,
    user_name varchar(255),
    birthday date
);

CREATE TABLE IF NOT EXISTS friends (
    user_id integer REFERENCES users (id) ON DELETE CASCADE,
    friend_id integer REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS mpa (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name varchar(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS movies (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    movie_name varchar(255) NOT NULL,
    description varchar(255),
    release_date date,
    duration integer,
    mpa_id integer REFERENCES mpa (id)
);

CREATE TABLE IF NOT EXISTS genres (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS movies_genres (
    movie_id integer REFERENCES movies (id) ON DELETE CASCADE,
    genre_id integer REFERENCES genres (id) ON DELETE CASCADE,
    PRIMARY KEY (movie_id, genre_id)
);

CREATE TABLE IF NOT EXISTS movies_likes (
    movie_id integer REFERENCES movies (id),
    user_id integer REFERENCES users (id)
);

CREATE INDEX idx_movies_likes_user ON movies_likes(user_id);
CREATE INDEX idx_friends_user ON friends(user_id);